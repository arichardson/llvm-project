; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --function-signature --force-update
; RUN: %cheri_opt -opaque-pointers=0 -S -passes=gvn %s | FileCheck %s
; ModuleID = 'union2.c'
target datalayout = "pf200:128:128:128:64-A200-P200-G200"


; Check that GVN doesn't attempt to turn a store of a capability followed by
; a load of an integer into something else (this behaviour broke unions)

; Function Attrs: nounwind
define i32 @bar(i8 addrspace(200)* inreg %u.coerce) #0 {
; CHECK-LABEL: define {{[^@]+}}@bar
; CHECK-SAME: (i8 addrspace(200)* inreg [[U_COERCE:%.*]]) addrspace(200) #[[ATTR0:[0-9]+]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[U_SROA_0_SROA_0:%.*]] = alloca i8 addrspace(200)*, align 32, addrspace(200)
; CHECK-NEXT:    store i8 addrspace(200)* [[U_COERCE]], i8 addrspace(200)* addrspace(200)* [[U_SROA_0_SROA_0]], align 32
; CHECK-NEXT:    [[U_SROA_0_SROA_0_0_X_SROA_CAST2:%.*]] = bitcast i8 addrspace(200)* addrspace(200)* [[U_SROA_0_SROA_0]] to i32 addrspace(200)*
; CHECK-NEXT:    [[U_SROA_0_SROA_0_0_U_SROA_0_SROA_0_0_U_SROA_0_0_U_SROA_0_0_:%.*]] = load i32, i32 addrspace(200)* [[U_SROA_0_SROA_0_0_X_SROA_CAST2]], align 32
; CHECK-NEXT:    [[CALL:%.*]] = tail call i32 @foo(i32 signext [[U_SROA_0_SROA_0_0_U_SROA_0_SROA_0_0_U_SROA_0_0_U_SROA_0_0_]])
; CHECK-NEXT:    ret i32 [[CALL]]
;
entry:
  %u.sroa.0.sroa.0 = alloca i8 addrspace(200)*, align 32, addrspace(200)
  store i8 addrspace(200)* %u.coerce, i8 addrspace(200)* addrspace(200)* %u.sroa.0.sroa.0, align 32
  %u.sroa.0.sroa.0.0.x.sroa_cast2 = bitcast i8 addrspace(200)* addrspace(200)* %u.sroa.0.sroa.0 to i32 addrspace(200)*
  %u.sroa.0.sroa.0.0.u.sroa.0.sroa.0.0.u.sroa.0.0.u.sroa.0.0. = load i32, i32 addrspace(200)* %u.sroa.0.sroa.0.0.x.sroa_cast2, align 32
  %call = tail call i32 @foo(i32 signext %u.sroa.0.sroa.0.0.u.sroa.0.sroa.0.0.u.sroa.0.0.u.sroa.0.0.) #3
  ret i32 %call
}

declare i32 @foo(i32 signext) #1

attributes #0 = { nounwind }
attributes #1 = { nounwind }
attributes #2 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.8.0 (ssh://dc552@vica.cl.cam.ac.uk:/home/dc552/CHERISDK/llvm/tools/clang f8b93d4881438c4368509c2a579f59e3c9d11c61) (ssh://dc552@vica.cl.cam.ac.uk:/home/dc552/CHERISDK/llvm 99d44e3898b2909744731e598e56b8ee44891d15)"}
